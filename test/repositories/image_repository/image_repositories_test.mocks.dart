// Mocks generated by Mockito 5.1.0 from annotations
// in image_gallery_app/test/repositories/image_repository/image_repositories_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:image_gallery_app/datas/image_local_data.dart' as _i2;
import 'package:image_gallery_app/datas/image_remote_data.dart' as _i5;
import 'package:image_gallery_app/models/image_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [IImageLocalData].
///
/// See the documentation for Mockito's code generation for more information.
class MockIImageLocalData extends _i1.Mock implements _i2.IImageLocalData {
  MockIImageLocalData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> isImagesCached() =>
      (super.noSuchMethod(Invocation.method(#isImagesCached, []),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<List<_i4.ImageModel>> fetchCacheImages() => (super.noSuchMethod(
          Invocation.method(#fetchCacheImages, []),
          returnValue: Future<List<_i4.ImageModel>>.value(<_i4.ImageModel>[]))
      as _i3.Future<List<_i4.ImageModel>>);
  @override
  _i3.Future<void> cacheImages(List<_i4.ImageModel>? datas) =>
      (super.noSuchMethod(Invocation.method(#cacheImages, [datas]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}

/// A class which mocks [IImageRemoteData].
///
/// See the documentation for Mockito's code generation for more information.
class MockIImageRemoteData extends _i1.Mock implements _i5.IImageRemoteData {
  MockIImageRemoteData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.ImageModel>> fetchRemoteImages() => (super.noSuchMethod(
          Invocation.method(#fetchRemoteImages, []),
          returnValue: Future<List<_i4.ImageModel>>.value(<_i4.ImageModel>[]))
      as _i3.Future<List<_i4.ImageModel>>);
}
